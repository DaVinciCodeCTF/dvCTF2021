

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
from Crypto.Util.number import long_to_bytes
import json

with open('weak_rsa.json', 'r') as enonce:
    challenge = json.loads(enonce.read())

N = challenge['N']
ct = challenge['ct']
e = challenge['e']
F = factor(N)
print(F)
p = F[_sage_const_0 ][_sage_const_0 ]
q = F[_sage_const_1 ][_sage_const_0 ]

totient = (p-_sage_const_1 )*(q-_sage_const_1 )
d = inverse_mod(e, totient)
M = long_to_bytes(pow(ct, d, N))
print(M)

